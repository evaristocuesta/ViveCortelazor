@using ViveCortelazor.Extensions
@inject IViewLocalizer Localizer
@model PagedList<ViveCortelazor.Models.ContentViewModel>

@{
    ViewData["Title"] = $"{Localizer["Title"].Value} - Vive Cortelazor - Sierra de Aracena";
    ViewData["Keywords"] = Localizer["Keywords"];
    ViewData["Description"] = Localizer["Description"];
    ViewData["Image"] = "/images/carousel/cortelazor1.jpg";
    ViewData["ImageWidth"] = "1920";
    ViewData["ImageHeight"] = "1080";
    ViewData["Robots"] = "all";
}

<div class="container blog">
    <div class="post">
        <h1>@Localizer["Blog Cortelazor"]</h1>
    </div>

    @if (Model.Items.Count > 0)
    {
        @foreach (var post in Model.Items)
        {
            @await Html.PartialAsync("_Post", post)
        }

        <div class="row mt-4">
            <div class="col-12 d-flex justify-content-between">
                @if (Model.HasNextPage)
                {
                    <a href="/@ViewContext.GetLang()/blog/@(Model.Page + 1)" class="btn pagination-button rounded py-2 px-3">
                        <i class="fas fa-angle-left"></i>&nbsp;@Localizer["Previous"]
                    </a>
                }
                else
                {
                    <div class="flex-grow-1"></div>
                }


                @if (Model.HasPreviousPage)
                {
                    <a href="/@ViewContext.GetLang()/blog/@(Model.Page - 1)" class="btn pagination-button rounded py-2 px-3">
                        @Localizer["Next"]&nbsp;<i class="fas fa-angle-right"></i>
                    </a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <h4>@Localizer["No blog posts available"]</h4>
        </div>
    }
</div>